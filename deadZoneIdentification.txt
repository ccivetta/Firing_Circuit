/* mbed Microcontroller Library
 * Copyright (c) 2019 ARM Limited
 * SPDX-License-Identifier: Apache-2.0
 */

#include "mbed.h"
#include "MotCon.h"
#include "BNO055.h"



int main()
{

    // Initialise the digital pin LED1 as an output
    DigitalOut conveyor(D3);
    DigitalOut motor(D11);


    MotCon yaw(A5, A3, A4); //positive = CW; negative = CCW
    MotCon pitch(A1, A2, A0); //postiive = up; negative = down

    BNO055 imu(D0,D1);  
    imu.reset();

    imu.setmode(OPERATION_MODE_IMUPLUS); //Set Mode to IMU with relative Heading
    imu.set_angle_units(RADIANS); // Set Angle Units to radians
    imu.set_anglerate_units(RAD_PER_SEC); //Set Gyro units to rad/s

    
    Timer t;
    float theta;
    imu.get_angles();
    t.start();
    for (float i = 0; i <= .5; i+=.01){
        pitch.mot_control(0);
        yaw.mot_control(0);
        ThisThread::sleep_for(1000);
        yaw.mot_control(i);
        for (int j = 0; j < 4; j++){
            imu.get_angles();
            imu.get_gyro();
            printf("%f, %f, %f\n", imu.euler.yaw, imu.gyro.z, i);
            ThisThread::sleep_for(10);
        }
        pitch.mot_control(0);
        yaw.mot_control(0);
    }    
}
